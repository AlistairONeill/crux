AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcStackName:
    Type: String
    Default: soak-vpc
  CertificateARN:
    Type: String
    Default: 'arn:aws:acm:eu-west-2:955308952094:certificate/ef07483a-cdfd-4bca-9d4c-900ed408daa4'

Resources:
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the facing load balancer
      VpcId:
         Fn::ImportValue: !Join [':', [!Ref 'VpcStackName', 'VPCId']]
      SecurityGroupIngress:
        # Allow access to ALB from anywhere on the internet
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        - Fn::ImportValue: !Join [':', [!Ref 'VpcStackName', 'PublicSubnetOne']]
        - Fn::ImportValue: !Join [':', [!Ref 'VpcStackName', 'PublicSubnetTwo']]
      SecurityGroups: [!Ref 'LoadBalancerSG']
      Tags:
        - Key: Name
          Value: soak-lb

  SoakRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName:
          Fn::GetAtt: ["LoadBalancer","DNSName"]
        EvaluateTargetHealth: false
        HostedZoneId:
          Fn::GetAtt: ["LoadBalancer","CanonicalHostedZoneID"]
      HostedZoneName: 'crux.cloud.'
      Name: 'soak.crux.cloud'
      Type: 'A'

  LoadBalancerHTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: 'redirect'
          RedirectConfig:
            Port: 443
            Protocol: HTTPS
            StatusCode: HTTP_302
      LoadBalancerArn: !Ref 'LoadBalancer'
      Port: 80
      Protocol: HTTP

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'SoakTargetGroup'
          Type: 'forward'
      LoadBalancerArn: !Ref 'LoadBalancer'
      Certificates:
         - CertificateArn: !Ref CertificateARN
      Port: 443
      Protocol: HTTPS

  SoakTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /status
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: 'crux-soak'
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: !Join [':', [!Ref 'VpcStackName', 'VPCId']]
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '10'

Outputs:
  SoakTargetGroup:
    Value: !Ref 'SoakTargetGroup'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'SoakTargetGroup' ] ]
  LoadBalancerSG:
    Value: !Ref 'LoadBalancerSG'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'LoadBalancerSG' ] ]
