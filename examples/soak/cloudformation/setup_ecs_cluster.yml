AWSTemplateFormatVersion: '2010-09-09'
Description: This stack starts an example load balanced Fargate task.

Parameters:
  VpcStackName:
    Type: String
    Default: soak-vpc
    Description: The name of the parent Fargate networking stack that you created. Necessary
                 to locate and reference resources created by that stack.

Resources:
  # ECS Resources
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: 'crux-soak'
      ClusterSettings:
        - Name: 'containerInsights'
          Value: 'enabled'

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: 'crux-soak'

  FargateContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the Fargate containers
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'VpcStackName', 'VPCId']]

  EcsSecurityGroupIngressFromPublicALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the public ALB
      GroupId: !Ref 'FargateContainerSecurityGroup'
      IpProtocol: -1
      SourceSecurityGroupId: !Ref 'PublicLoadBalancerSG'

  PublicLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId:
         Fn::ImportValue:
          !Join [':', [!Ref 'VpcStackName', 'VPCId']]
      SecurityGroupIngress:
          # Allow access to ALB from anywhere on the internet
          - CidrIp: 0.0.0.0/0
            IpProtocol: -1

  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        - Fn::ImportValue:
            !Join [':', [!Ref 'VpcStackName', 'PublicSubnetOne']]
        - Fn::ImportValue:
            !Join [':', [!Ref 'VpcStackName', 'PublicSubnetTwo']]
      SecurityGroups: [!Ref 'PublicLoadBalancerSG']

  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - PublicLoadBalancer
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'SoakTargetGroup'
          Type: 'forward'
      LoadBalancerArn: !Ref 'PublicLoadBalancer'
      Port: 80
      Protocol: HTTP

  SoakTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: 'crux-soak'
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'VpcStackName', 'VPCId']]

Outputs:
  SoakTargetGroup:
    Description: The Target Group for Soak
    Value: !Ref 'SoakTargetGroup'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'SoakTargetGroup' ] ]

  PublicLoadBalancerListener:
    Description: The Public Load Balancer Listener
    Value: !Ref 'PublicLoadBalancerListener'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicLoadBalancerListener' ] ]

  FargateContainerSecurityGroup:
    Description: The Security Group for the Fargate Containers
    Value: !Ref 'FargateContainerSecurityGroup'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'FargateContainerSecurityGroup' ] ]
